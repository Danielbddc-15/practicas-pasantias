{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ejercicio 1 CRUD\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { authAPI, getCurrentUser } from '../services/api';\n\n// Definir estados iniciales\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Tipos de acciones\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\n  SET_LOADING: 'SET_LOADING',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  RESTORE_SESSION: 'RESTORE_SESSION'\n};\n\n// Reducer para manejar estados\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...initialState,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        },\n        error: null\n      };\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case AUTH_ACTIONS.RESTORE_SESSION:\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: action.payload.isAuthenticated,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Crear contexto\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para usar el contexto\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\n// Proveedor del contexto\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Restaurar sesión al cargar la aplicación\n  useEffect(() => {\n    const restoreSession = () => {\n      try {\n        const token = localStorage.getItem('token');\n        const user = getCurrentUser();\n        if (token && user) {\n          dispatch({\n            type: AUTH_ACTIONS.RESTORE_SESSION,\n            payload: {\n              user,\n              isAuthenticated: true\n            }\n          });\n        } else {\n          dispatch({\n            type: AUTH_ACTIONS.SET_LOADING,\n            payload: false\n          });\n        }\n      } catch (error) {\n        console.error('Error restoring session:', error);\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    restoreSession();\n  }, []);\n\n  // Función para iniciar sesión\n  const login = useCallback(async credentials => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await authAPI.login(credentials);\n\n      // Guardar token y usuario en localStorage\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response\n      });\n      return response;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: error.message || 'Error al iniciar sesión'\n      });\n      throw error;\n    }\n  }, []);\n\n  // Función para registrar usuario\n  const register = useCallback(async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_START\n    });\n    try {\n      const response = await authAPI.register(userData);\n\n      // Guardar token y usuario en localStorage\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: response\n      });\n      return response;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: error.message || 'Error al registrar usuario'\n      });\n      throw error;\n    }\n  }, []);\n\n  // Función para cerrar sesión\n  const logout = useCallback(async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Error durante logout:', error);\n    } finally {\n      // Siempre limpiar el estado local\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    }\n  }, []);\n\n  // Función para actualizar perfil\n  const updateProfile = async profileData => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n\n      // Actualizar usuario en localStorage\n      localStorage.setItem('user', JSON.stringify(response.user));\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE,\n        payload: response.user\n      });\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Función para limpiar errores\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Verificar si el usuario tiene un rol específico\n  const hasRole = role => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === role;\n  };\n\n  // Verificar si el usuario es admin\n  const isAdmin = () => {\n    return hasRole('admin');\n  };\n\n  // Valor del contexto\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    clearError,\n    hasRole,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"SHoq475xG6AFfwLaJLDKjhtOgTc=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","authAPI","getCurrentUser","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","UPDATE_PROFILE","SET_LOADING","CLEAR_ERROR","RESTORE_SESSION","authReducer","state","action","type","payload","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","restoreSession","token","localStorage","getItem","console","login","credentials","response","setItem","JSON","stringify","message","register","userData","logout","removeItem","updateProfile","profileData","clearError","hasRole","role","_state$user","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Ejercicio 1 CRUD/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\r\nimport { authAPI, getCurrentUser } from '../services/api';\r\n\r\n// Definir estados iniciales\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n  error: null\r\n};\r\n\r\n// Tipos de acciones\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  REGISTER_START: 'REGISTER_START',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\r\n  SET_LOADING: 'SET_LOADING',\r\n  CLEAR_ERROR: 'CLEAR_ERROR',\r\n  RESTORE_SESSION: 'RESTORE_SESSION'\r\n};\r\n\r\n// Reducer para manejar estados\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n    case AUTH_ACTIONS.REGISTER_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n    case AUTH_ACTIONS.REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...initialState,\r\n        isLoading: false\r\n      };\r\n\r\n    case AUTH_ACTIONS.UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n\r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.RESTORE_SESSION:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        isLoading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Crear contexto\r\nconst AuthContext = createContext();\r\n\r\n// Hook personalizado para usar el contexto\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Proveedor del contexto\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Restaurar sesión al cargar la aplicación\r\n  useEffect(() => {\r\n    const restoreSession = () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const user = getCurrentUser();\r\n\r\n        if (token && user) {\r\n          dispatch({\r\n            type: AUTH_ACTIONS.RESTORE_SESSION,\r\n            payload: {\r\n              user,\r\n              isAuthenticated: true\r\n            }\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: AUTH_ACTIONS.SET_LOADING,\r\n            payload: false\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error restoring session:', error);\r\n        dispatch({\r\n          type: AUTH_ACTIONS.SET_LOADING,\r\n          payload: false\r\n        });\r\n      }\r\n    };\r\n\r\n    restoreSession();\r\n  }, []);\r\n\r\n  // Función para iniciar sesión\r\n  const login = useCallback(async (credentials) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n\r\n    try {\r\n      const response = await authAPI.login(credentials);\r\n      \r\n      // Guardar token y usuario en localStorage\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: response\r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\r\n        payload: error.message || 'Error al iniciar sesión'\r\n      });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Función para registrar usuario\r\n  const register = useCallback(async (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_START });\r\n\r\n    try {\r\n      const response = await authAPI.register(userData);\r\n      \r\n      // Guardar token y usuario en localStorage\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n\r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\r\n        payload: response\r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\r\n        payload: error.message || 'Error al registrar usuario'\r\n      });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Función para cerrar sesión\r\n  const logout = useCallback(async () => {\r\n    try {\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      console.error('Error durante logout:', error);\r\n    } finally {\r\n      // Siempre limpiar el estado local\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    }\r\n  }, []);\r\n\r\n  // Función para actualizar perfil\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await authAPI.updateProfile(profileData);\r\n      \r\n      // Actualizar usuario en localStorage\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n\r\n      dispatch({\r\n        type: AUTH_ACTIONS.UPDATE_PROFILE,\r\n        payload: response.user\r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Función para limpiar errores\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Verificar si el usuario tiene un rol específico\r\n  const hasRole = (role) => {\r\n    return state.user?.role === role;\r\n  };\r\n\r\n  // Verificar si el usuario es admin\r\n  const isAdmin = () => {\r\n    return hasRole('admin');\r\n  };\r\n\r\n  // Valor del contexto\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    clearError,\r\n    hasRole,\r\n    isAdmin\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}