{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\proyecto-integrado\\\\src\\\\shared\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Tipos para el usuario\n\n// Interfaz para el contexto de autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Crear el contexto\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Hook personalizado para usar el contexto\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\n// Proveedor del contexto\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Verificar si hay un usuario logueado al cargar la aplicación\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing saved user data:', error);\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  // Función de login (simula una llamada al servidor)\n  const login = async (username, password) => {\n    setIsLoading(true);\n\n    // Simular llamada al servidor\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Validación simple (en un proyecto real esto sería una API)\n    if (username === 'admin' && password === '123456') {\n      const userData = {\n        id: '1',\n        username: username,\n        email: `${username}@example.com`,\n        token: `token-${Date.now()}`\n      };\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setIsLoading(false);\n      return true;\n    } else if (username === 'usuario' && password === 'password') {\n      const userData = {\n        id: '2',\n        username: username,\n        email: `${username}@example.com`,\n        token: `token-${Date.now()}`\n      };\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setIsLoading(false);\n      return true;\n    }\n    setIsLoading(false);\n    return false;\n  };\n\n  // Función de logout\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem(`products_${user === null || user === void 0 ? void 0 : user.id}`);\n    localStorage.removeItem(`photos_${user === null || user === void 0 ? void 0 : user.id}`);\n  };\n  const isAuthenticated = !!user;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","savedUser","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","username","password","Promise","resolve","setTimeout","id","email","token","Date","now","setItem","stringify","logout","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/proyecto-integrado/src/shared/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\n// Tipos para el usuario\r\nexport interface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  token: string;\r\n}\r\n\r\n// Interfaz para el contexto de autenticación\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (username: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\n// Crear el contexto\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Hook personalizado para usar el contexto\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Proveedor del contexto\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Verificar si hay un usuario logueado al cargar la aplicación\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      try {\r\n        const userData = JSON.parse(savedUser);\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error('Error parsing saved user data:', error);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Función de login (simula una llamada al servidor)\r\n  const login = async (username: string, password: string): Promise<boolean> => {\r\n    setIsLoading(true);\r\n    \r\n    // Simular llamada al servidor\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Validación simple (en un proyecto real esto sería una API)\r\n    if (username === 'admin' && password === '123456') {\r\n      const userData: User = {\r\n        id: '1',\r\n        username: username,\r\n        email: `${username}@example.com`,\r\n        token: `token-${Date.now()}`\r\n      };\r\n      \r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setIsLoading(false);\r\n      return true;\r\n    } else if (username === 'usuario' && password === 'password') {\r\n      const userData: User = {\r\n        id: '2',\r\n        username: username,\r\n        email: `${username}@example.com`,\r\n        token: `token-${Date.now()}`\r\n      };\r\n      \r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setIsLoading(false);\r\n      return true;\r\n    }\r\n    \r\n    setIsLoading(false);\r\n    return false;\r\n  };\r\n\r\n  // Función de logout\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem(`products_${user?.id}`);\r\n    localStorage.removeItem(`photos_${user?.id}`);\r\n  };\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isAuthenticated, isLoading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}